## sample config for khd
#
## NOTE(koekeishiya): A bind is written in the form:
##                   <keysym> [!] [<app list>] [->] : <command>
##                   where
##                       <keysym>   = mode + mod + ... + mod - literal
##
##                       <keysym>   = mode + mod + ... + mod - keycode
##                                    keycode must have 0x prefix
##
##                       <keysym>   = mode + mod + ... + mod - button#
##                                    replace '#' with mouse-button id; id >= 3
##
##                       modifier only binding
##                       <keysym>   = mode + mod + ... + mod
##
##                       literal only binding
##                       <keysym>   = - literal
##
##                       keycode only binding
##                       <keysym>   = - keycode
##
##                       [<app,
##                         app,     = optional list '[app1, ..., appN]' of applications
##                         app>]      that this bind will be activated for. if the
##                                    focused application is not contained in this list,
##                                    the associated command will not be triggered, and
##                                    the keypress will be passed through as normal.
##
##                       [!]        = optional operator '!' negates the behaviour when a
##                                    list of applications is given. this marks the bind
##                                    as 'Hotkey_Exclude', causing the bind to not work
##                                    when the focused application is in the given list.
##
##                       [->]       = optional operator '->' that marks this bind as
##                                    'passthrough'. this causes the key to be passed
##                                    through to the system, instead of being consumed.
##
##                       <command>  = command is executed through '$SHELL -c' and
##                                    follows valid shell syntax. if the $SHELL environment
##                                    variable is not set, it will default to '/bin/bash'.
##                                    when bash is used, the ';' delimeter can be specified
##                                    to chain commands.
##
##                                    to allow a command to extend into multiple lines,
##                                    prepend '\' at the end of the previous line.
##
##                                    an EOL character signifies the end of the bind.
#
## NOTE(koekeishiya) Example of passthrough
## cmd - m -> : echo "alert and minimize window" | alerter -title Test passthrough -timeout 2
#
## NOTE(koekeishiya) Example of app list
## alt - e [
##           iTerm2,
##           Terminal,
##           HyperTerm
##         ]
##         : echo "so this is how deep the rabbit hole goes.." |\
##           alerter -title Test passthrough -timeout 2
#
## NOTE(koekeishiya) Example of negated app list
## alt - e [
##           iTerm2,
##           Terminal,
##           HyperTerm
##         ] !
##         : echo "blue pill, i choose you!" |\
##           alerter -title Test passthrough -timeout 2
#
## NOTE(koekeishiya) Modifier only binding
## left shift    -> (    right shift   -> )
## left cmd      -> {    right cmd     -> }
#
## khd mod_trigger_timeout 0.1
## lshift : khd -p "shift - 8"
## rshift : khd -p "shift - 9"
## lcmd   : khd -p "shift + alt - 8"
## rcmd   : khd -p "shift + alt - 9"
#
## NOTE(koekeishiya) Bind mouse-buttons
## - button3 : khd -w "mouse-button 3 pressed"
## - button4 : khd -w "mouse-button 4 pressed"
#
## TODO(koekeishiya): possibly allow combined syntax such as
## [switcher,ytd] + ctrl - f : khd -e "mode activate default"
#
## vi-mode for non-terminal applications
#
## remap left-control h/j/k/l -> arrow keys
#lctrl - h         ![HyperTerm,Terminal,iTerm2]      :   khd -p "- left"
#lctrl - j         ![HyperTerm,Terminal,iTerm2]      :   khd -p "- down"
#lctrl - k         ![HyperTerm,Terminal,iTerm2]      :   khd -p "- up"
#lctrl - l         ![HyperTerm,Terminal,iTerm2]      :   khd -p "- right"
#
#shift + lctrl - h ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift - left"
#shift + lctrl - j ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift - down"
#shift + lctrl - k ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift - up"
#shift + lctrl - l ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift - right"
#
## remap left-control 0 / 4   -> start / end of line
#lctrl - 0         ![HyperTerm,Terminal,iTerm2]      :   khd -p "cmd - left"
#lctrl - 4         ![HyperTerm,Terminal,iTerm2]      :   khd -p "cmd - right"
#
## remap left-control g / G   -> start / end of text
#lctrl - g         ![HyperTerm,Terminal,iTerm2]      :   khd -p "cmd - up"
#lctrl + shift - g ![HyperTerm,Terminal,iTerm2]      :   khd -p "cmd - down"
#
#shift + lctrl - 0 ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift + cmd - left"
#shift + lctrl - 4 ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift + cmd - right"
#
## remap left-control b / e   -> start / end of word
#lctrl - b         ![HyperTerm,Terminal,iTerm2]      :   khd -p "alt - left"
#lctrl - e         ![HyperTerm,Terminal,iTerm2]      :   khd -p "alt - right"
#
#shift + lctrl - b ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift + alt - left"
#shift + lctrl - e ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift + alt - right"
#
## remap left-control x       -> forward delete
#lctrl - x         ![HyperTerm,Terminal,iTerm2]      :   khd -p "- delete"
#
#
#
## suppress unregistered keybinds outside default mode
## enabled by default! must be explicitly set to 'off'
## khd void_unlisted_bind off
#
## toggle between modes
ctrl - f                :   khd -e "mode activate switcher"
switcher + ctrl - f     :   khd -e "mode activate default"
ytd + ctrl - f          :   khd -e "mode activate default"
swap + ctrl - f         :   khd -e "mode activate default"
space + ctrl - f        :   khd -e "mode activate default"
tree + ctrl - f         :   khd -e "mode activate default"
#
#switcher - w            :   khd -e "mode activate ytd"
#switcher - a            :   khd -e "mode activate swap"
#switcher - s            :   khd -e "mode activate space"
#switcher - d            :   khd -e "mode activate tree"
#switcher - q            :   khd -e "mode activate info"
#
#
#
## switcher mode
switcher - r            :   khd -e "reload" # reload config
#
#switcher - return       :   open -na /Applications/HyperTerm.app;\
#                            khd -e "mode activate default"
#
#switcher - n            :   chunk titling::window -fm prev
#switcher - m            :   chunk titling::window -fm next
#
## ytd mode
#ytd - x                 :   ytc play;\
#                            khd -e "mode activate default"
#
#ytd - s                 :   ytc mkfav;\
#                            khd -e "mode activate default"
#
## 0x32 == <
#ytd - 0x32              :   ytc fav
#ytd - z                 :   ytc prev
#ytd - c                 :   ytc next
#ytd - v                 :   ytc stop
#ytd - a                 :   ytc volup
#ytd - d                 :   ytc voldown
#ytd - right             :   ytc seekfw
#ytd - left              :   ytc seekbk
#
## tree mode
#
#tree - s                :   kwmc window -c split - mode toggle;\
#                            khd -e "mode activate default"
#
#tree - c                :   kwmc window -c type toggle;\
#                            khd -e "mode activate default"
#
#tree - h                :   kwmc window -c expand 0.05 west
#tree - j                :   kwmc window -c expand 0.05 south
#tree - k                :   kwmc window -c expand 0.05 north
#tree - l                :   kwmc window -c expand 0.05 east
#tree + shift - h        :   kwmc window -c reduce 0.05 west
#tree + shift - j        :   kwmc window -c reduce 0.05 south
#tree + shift - k        :   kwmc window -c reduce 0.05 north
#tree + shift - l        :   kwmc window -c reduce 0.05 east
#
#tree - p                :   kwmc tree -pseudo create
#tree + shift - p        :   kwmc tree -pseudo destroy
#
#tree - o                :   kwmc window -s prev
#tree + shift - o        :   kwmc window -s next
#
#
#
## default
#
# open terminal, blazingly fast compared to iTerm/Hyper
#cmd - return : open -na /Applications/Kitty.app

# focus window
alt - h : chunkc tiling::window --focus west
alt - j : chunkc tiling::window --focus south
alt - k : chunkc tiling::window --focus north
alt - l : chunkc tiling::window --focus east

cmd - j : chunkc tiling::window --focus prev
cmd - k : chunkc tiling::window --focus next

# equalize size of windows
shift + alt - 0 : chunkc tiling::desktop --equalize

# swap window
shift + alt - h : chunkc tiling::window --swap west
shift + alt - j : chunkc tiling::window --swap south
shift + alt - k : chunkc tiling::window --swap north
shift + alt - l : chunkc tiling::window --swap east

# move window
shift + cmd - h : chunkc tiling::window --warp west
shift + cmd - j : chunkc tiling::window --warp south
shift + cmd - k : chunkc tiling::window --warp north
shift + cmd - l : chunkc tiling::window --warp east

# move floating windows / windows on a floating space
shift + alt - up     : chunkc tiling::window --warp-floating fullscreen
shift + alt - left   : chunkc tiling::window --warp-floating left
shift + alt - right  : chunkc tiling::window --warp-floating right
shift + cmd - left   : chunkc tiling::window --warp-floating top-left
shift + cmd - right  : chunkc tiling::window --warp-floating top-right
shift + ctrl - left  : chunkc tiling::window --warp-floating bottom-left
shift + ctrl - right : chunkc tiling::window --warp-floating bottom-right

# send window to desktop
shift + cmd - x : chunkc tiling::window --send-to-desktop $(chunkc get _last_active_desktop)
shift + cmd - z : chunkc tiling::window --send-to-desktop prev
shift + cmd - c : chunkc tiling::window --send-to-desktop next
shift + cmd - 1 : chunkc tiling::window --send-to-desktop 1
shift + cmd - 2 : chunkc tiling::window --send-to-desktop 2
shift + cmd - 3 : chunkc tiling::window --send-to-desktop 3
shift + cmd - 4 : chunkc tiling::window --send-to-desktop 4
shift + cmd - 5 : chunkc tiling::window --send-to-desktop 5
shift + cmd - 6 : chunkc tiling::window --send-to-desktop 6

# send window to desktop and switch desktop
shift + alt - x : `id=$(chunkc get _last_active_desktop); chunkc tiling::window -d $id; khd -p "ctrl - $id" &> /dev/null`
#shift + alt - z : chunkc tiling::window -d prev; khd -p "ctrl + shift - z"
shift + alt - 1 : chunkc tiling::window -d 1; khd -p "ctrl - 1"
shift + alt - 2 : chunkc tiling::window -d 2; khd -p "ctrl - 2"
shift + alt - 3 : chunkc tiling::window -d 3; khd -p "ctrl - 3"
shift + alt - 4 : chunkc tiling::window -d 4; khd -p "ctrl - 4"
shift + alt - 5 : chunkc tiling::window -d 5; khd -p "ctrl - 5"
shift + alt - 6 : chunkc tiling::window -d 6; khd -p "ctrl - 6"
        
# switch to last active desktop
cmd + alt - x   : `id=$(chunkc get _last_active_desktop); khd -p "ctrl - $id" &> /dev/null`

# focus monitor
#ctrl + alt - z  : chunkc tiling::monitor -f prev
#ctrl + alt - c  : chunkc tiling::monitor -f next
#ctrl + alt - 1  : chunkc tiling::monitor -f 1
#ctrl + alt - 2  : chunkc tiling::monitor -f 2
#ctrl + alt - 3  : chunkc tiling::monitor -f 3

# send window to monitor and follow focus
#ctrl + cmd - z  : chunkc tiling::window --send-to-monitor prev; chunkc tiling::monitor -f prev
#ctrl + cmd - c  : chunkc tiling::window --send-to-monitor next; chunkc tiling::monitor -f next
#ctrl + cmd - 1  : chunkc tiling::window --send-to-monitor 1; chunkc tiling::monitor -f 1
#ctrl + cmd - 2  : chunkc tiling::window --send-to-monitor 2; chunkc tiling::monitor -f 2
#ctrl + cmd - 3  : chunkc tiling::window --send-to-monitor 3; chunkc tiling::monitor -f 3

# increase region size
shift + alt - a : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge west
shift + alt - s : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge south
shift + alt - w : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge north
shift + alt - d : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge east

# decrease region size
shift + cmd - a : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge west
shift + cmd - s : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge south
shift + cmd - w : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge north
shift + cmd - d : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge east


# set insertion point for focused container
#ctrl + cmd - f : chunkc tiling::window --use-insertion-point cancel
ctrl + cmd - h : chunkc tiling::window --use-insertion-point west
ctrl + cmd - j : chunkc tiling::window --use-insertion-point south
ctrl + cmd - k : chunkc tiling::window --use-insertion-point north
ctrl + cmd - l : chunkc tiling::window --use-insertion-point east

# rotate tree
alt - r : chunkc tiling::desktop --rotate 90

# mirror tree y-axis
alt - y : chunkc tiling::desktop --mirror vertical

# mirror tree x-axis
alt - x : chunkc tiling::desktop --mirror horizontal

# toggle desktop offset
alt - a : chunkc tiling::desktop --toggle offset

# toggle window fullscreen
alt - f : chunkc tiling::window --toggle fullscreen

# toggle window native fullscreen
shift + alt - f : chunkc tiling::window --toggle native-fullscreen

# toggle window parent zoom
alt - d : chunkc tiling::window --toggle parent

# toggle window split type
alt - e : chunkc tiling::window --toggle split

# float / unfloat window
alt - t : chunkc tiling::window --toggle float

# toggle sticky, float and resize to picture-in-picture size
alt - s : chunkc tiling::window --toggle sticky;\
          chunkc tiling::window --warp-floating pip-right

alt - w : chunkc tiling::window --close
# float next window to be tiled
shift + alt - t : chunkc set window_float_next 1

# change layout of desktop
ctrl + alt - a : chunkc tiling::desktop --layout bsp
ctrl + alt - s : chunkc tiling::desktop --layout monocle
ctrl + alt - d : chunkc tiling::desktop --layout float

ctrl + alt - w : chunkc tiling::desktop --deserialize ~/.chunkwm_layouts/dev_1

# remap caps-lock to escape for this config only !!!
# macos sierra can also perform this remap for a given keyboard
#- capslock : khd -p "- escape"

# key remap for norwegian layout \ { }
cmd - 7 : khd -p "shift + alt - 7"
cmd - 8 : khd -p "shift + alt - 8"
cmd - 9 : khd -p "shift + alt - 9"<Paste>
