global !p
def create_table(snip):
	rows = snip.buffer[snip.line].split('x')[0]
	cols = snip.buffer[snip.line].split('x')[1]

	int_val = lambda string: int(''.join(s for s in string if s.isdigit()))
	
	rows = int_val(rows)
	cols = int_val(cols)

	offset = cols + 1
	old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]
	
	snip.buffer[snip.line] = ''
	
	final_str = old_spacing + "\\begin{tabular}{|" + "|".join(['$' + str(i + 1) for i in range(cols)]) + "|}\n"

	for i in range(rows):
		final_str += old_spacing + '\t'
		final_str += " & ".join(['$' + str(i * cols + j + offset) for j in range(cols)])

		final_str += " \\\\\\\n"

	final_str += old_spacing + "\\end{tabular}\n$0"

	snip.expand_anon(final_str)


#this function is similar to add table
#don't know how merge yet
def add_mat(snip):
	t = snip.buffer[snip.line].strip()[0]
	rows = snip.buffer[snip.line].split('x')[0]
	cols = snip.buffer[snip.line].split('x')[1]

	int_val = lambda string: int(''.join(s for s in string if s.isdigit()))
	
	rows = int_val(rows)
	cols = int_val(cols)

	offset = cols + 1
	old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]

	
	snip.buffer[snip.line] = ''
	final_str = old_spacing + "\\begin{" + t + "matrix}\n"
	for i in range(rows):
		final_str += old_spacing + '\t'
		final_str += " & ".join(['$' + str(i * cols + j + offset) for j in range(cols)])

		final_str += " \\\\\\\n"

	final_str += "\\end{" + t + "matrix}\n${0}"
	snip.expand_anon(final_str)

endglobal


pre_expand "add_mat(snip)"
snippet "(p|b)mat(\d+)x(\d+)" "generate matrix" br
endsnippet




snippet nc 
\newcommand{\\${1:cmd}}[${2:0}]{${3:realcmd}} ${0}
endsnippet

snippet "b(egin)?" "begin{} / end{}" br
\begin{${1:env}}
	${0:${VISUAL}}
\end{$1}
endsnippet


snippet disp "begin \[\]"
\[
	${0:${VISUAL}}
\]
endsnippet 

snippet theorem "begin theorem" b
\begin{theorem}
	${0:${VISUAL}}
\end{theorem}
endsnippet

snippet lemma "begin lemma" b
\begin{lemma}
	${0:${VISUAL}}
\end{lemma}
endsnippet

snippet proof "begin proof" b
\begin{proof}
	${0:${VISUAL}}
\end{proof}
endsnippet

snippet enum "begin enumerate"
\begin{enumerate}
	\item
	${0:${VISUAL}}
	\item
\end{enumerate}
endsnippet 

snippet enumi "begin enumerate in roman"
\begin{enumerate}{(i)}
	\item
	${0:${VISUAL}}
	\item
\end{enumerate}
endsnippet 

snippet enuma "begin enumerate in english"
\begin{enumerate}{(a)}
	\item
	${0:${VISUAL}}
	\item
\end{enumerate}
endsnippet 

snippet gat "begin gather"
\begin{gather}
	${0:${VISUAL}}
\end{gather}
endsnippet 

snippet gat* "begin gather*"
\begin{gather*}
	${0:${VISUAL}}
\end{gather*}
endsnippet 

snippet eq "begin equation"
\begin{equation}
	${0:${VISUAL}}
\end{equation}
endsnippet 


snippet eq* "begin equation"
\begin{equation*}
	${0:${VISUAL}}
\end{equation*}
endsnippet 

snippet al "begin align"
\begin{align}
	${0:${VISUAL}}
\end{align}
endsnippet 


snippet al* "begin align*"
\begin{align*}
	${0:${VISUAL}}
\end{align*}
endsnippet 

snippet label "\label{}"
\label{${1}}${0}
endsnippet

snippet ref "\ref{}"
\ref{${1}}${0}
endsnippet

snippet frac "\frac{}{}"
\frac{${1:nume}}{${2:denom}}${0}
endsnippet


########################
#common customized expr

snippet set "\sset{}"
\sset{${1:${VISUAL}}}${0}
endsnippet 


snippet prob "\prob{}"
\prob{${0:${VISUAL}}}${0}
endsnippet 

snippet cprob "\cprob{}{}"
\cprob{$1}{${2:condition}}${0}
endsnippet 

snippet expect "\expect{}"
\expect{${0:${VISUAL}}}${0}
endsnippet 

snippet cexpect "\cexpect{}{}"
\cexpect{$1}{${2:condition}}${0}
endsnippet 

snippet inv "\inv{}"
\inv{${1:${VISUAL}}}${0}
endsnippet

snippet invf "\invf{}"
\invf{${1:${VISUAL}}}${0}
endsnippet

snippet trans "\trans{}"
\tran{${1:${VISUAL}}}${0}
endsnippet

snippet norm "\norm{}"
\norm{${1:${VISUAL}}}${0}
endsnippet 

snippet pnorm "\pnorm{}{}"
\pnorm{${1:obj}}{${2:norm}}${0}
endsnippet 


snippet abs "\abs{}"
\abs{${1:${VISUAL}}}${0}
endsnippet 

snippet sqrt "\sqrt{}" 
\sqrt{${1:${VISUAL}}}${0}
endsnippet




#deadly ninjia weapon
#snippet "'([^\.]+)\.([^\.]+)\.([^\.]+)'" "Description" r
#`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}^{`!p snip.rv = match.group(3)`}${0}
#endsnippet

#snippet "\b([^\.]+)\.([^\.]+)\.([^\.]+)\b" "Description" r
snippet "\s([^;]+);([^;]+);([^;]+)\s" "Description" r
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}^{`!p snip.rv = match.group(3)`}${0}
endsnippet

#snippet "\b([^\.]+)\.([^\.]+)\b" "Description" r
snippet "\s([^\;]+);([^;]+)\s" "Description" r
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}${0}
endsnippet

snippet "\s([^;]+);\.([^;]+)\s" "Description" r
`!p snip.rv = match.group(1)`^{`!p snip.rv = match.group(2)`}${0}
endsnippet

snippet "\b(sum|inf|max|min|sup|argmin|argmax) (.+) in (.+)" "Description" r
\\`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)` \in `!p snip.rv = match.group(3)`}${0}
endsnippet

#

snippet "\bsum(.+) (.+) to (.+)" "Description" r
\sum_{`!p snip.rv = match.group(1)`=`!p snip.rv = match.group(2)`}^{`!p snip.rv = match.group(3)`}${0}
endsnippet

snippet "\blim(.+)" "Description" r
\lim_{`!p snip.rv = match.group(1)` \to \infty}${0}
endsnippet



####################
# template


snippet template "template for latex"



% --------------------------------------------------------------
% This is all preamble stuff that you don't have to worry about.
% Head down to where it says "Start here"
% --------------------------------------------------------------
 
\documentclass[12pt]{article}
 
\usepackage[margin=0.2in]{geometry} 
\usepackage{desmacro}
\input{despkg}
% uncommnet the following if xr-hyper is used
% \externaldocument[prefix]{path to tex}[url to pdf]
% for example \externaldocument[V-]{./sub/scribe}[./sub/scribe.pdf]
%  bear note has a working version


 
\begin{document}
 
% --------------------------------------------------------------
%                         Start here
% --------------------------------------------------------------
 
%\renewcommand{\qedsymbol}{\filledbox}
 
\title{${1}}%replace X with the appropriate number
\author{${2} %replace with your name
} %if necessary, replace with your course title
\date{}
\maketitle

%solution
\begin{enumerate}
%problem 1%
\item 
\begin{enumerate}{(i)}
\item a

\end{enumerate}
%end of all problems%
\end{enumerate}

 
% --------------------------------------------------------------
%     You don't have to mess with anything below this line.
% --------------------------------------------------------------
 
\end{document}














endsnippet

